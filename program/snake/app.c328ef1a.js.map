{"version":3,"sources":["src/components/Painter.js","src/components/Snake.js","src/components/Game.js","app.js"],"names":["Painter","context2d","unit","ctx","x","y","fillRect","snake","self","drawRect","save","fillStyle","restore","forEach","block","index","foods","clearRect","Snake","length","position","body","Array","fill","direction","head","Object","assign","axis","step","unshift","tail","pop","push","lastDirection","KEY_SPACE","KEY_LEFT","KEY_TOP","KEY_RIGHT","KEY_DOWN","Game","config","_config","food","count","painter","document","getElementById","getContext","status","chessboard","tipElm","querySelector","initEvent","initChessboard","initSnake","initFood","layout","draw","addEventListener","evt","keyCode","stop","innerHTML","go","reset","i","len","addFood","flag","Math","round","random","clear","drawFood","drawSnake","move","isBiteSelf","message","splice","eat","alert","lastTimestamp","level","speed","timestamp","game","window","requestAnimationFrame"],"mappings":";;AGAA;;;;AAEA,IAAIkF,aAAJ;AACA,ADHA,ICGIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,MAAMD,KAAlB;ADHA;ACKA,SAAStD,IAAT,CAAcwD,SAAd,EAAyB;AACvB,MAAI,CAACH,aAAD,IAAkBG,SAAS,GAAGH,aAAZ,GAA4BE,KAAlD,EAAyD;AACvDF,IAAAA,aAAa,GAAGG,SAAhB;AACAC,IAAAA,AHTiBtF,ACAAkB,IESb,CAACW,IAAL;AACD;;AAED0D,AHXA,ACAA,EEWAA,MAAM,CAACC,UHXKvF,ICAsB,KDAlC,EGWA,AHXkC,CGWL4B,IAA7B;AACD,AHZmC,ACAA,QDAX3B,ACATiB,IDAoB,ECAA,QAApBA,MAAoB,uDDAJ,EAAI;ACAA,QAAZC,QAAY,QAAZA,QAAY;AEcpC,ADZA,AFFoC,IGc9BkE,IAAI,GAAG,IAAI9C,aAAJ,CAAS;AACpBjC,ADZF,ADHoC,EEelCA,KAAK,EAAE;AACLY,ADZJ,AFHI,IGeAA,ADZEgB,KFHGhC,CGeC,EAAE,AHfR,CGcK,ADXM,EFHAF,CEGG,EAAlB,MFHI;AGgBAmB,ADZJ,AFHI,ACFgC,IEiBhCA,ADZEgB,IDJMhC,CDCHF,ACF2B,GEiBxB,ADZE,ADJOkB,CDCjB,CGeU,CDZG,CFHDlB,CEGhB,GFHI,ACFgC,CACxBE,CADwB;AEkB9BA,ADZN,AFHG,ACHiC,ICM9BiC,ECYAjC,CAAC,CFjBQC,CEiBN,AFlB2B,EEiBtB,ADXD,CDLQe,ECKL,EAAhB,IDNoC,CACrBf,CADqB;AEmB9BA,ADZN,ADLI,ICKEiC,ECYAjC,CAAC,EAAE,AFjBAgB,ICKM,ADLX,GCKc,ADLF,ECKhB,EDLoBC,KAAJ,CAAUH,MAAV,EAAkBI,IAAlB,CAAuB;AEezB,ADTd,ADNyCnB,ICMnCmC,EDNmCnC,CAAC,EAADA,CAAF,ECMzB,GAAG,EAAjB;ACOS,AFbmCC,MAAAA,CAAC,EAADA;AEYtB,AFZiB,CEY1B,CAAb,EDJqBmC,CDRL,CAAZ,uBDGOpC,GAAGC,GAAG;AGmBjBkF,AHnBiB,ACFb,MEqBE,CAACC,EFrBEhE,CDGGrB,GADK,GACS,ECHtB,EDEa,CACLA,ACHS,GDEJ,CCFb,GEqBJ,CAA6B0B,IAA7B;AHnBiB,ACDd,UDEc3B,IADA,GACS,IADT,CACAA,IADA;AEMf,AFJEC,MAAAA,GAAG,CAACG,QAAJ,CAAaF,CAAC,GAAGF,IAAjB,EAAuBG,CAAC,GAAGH,IAA3B,EAAiCA,IAAjC,EAAuCA,IAAvC;AACD;;2BCFM;AAAA,UACGmB,IADH,GACuB,IADvB,CACGA,IADH,IDIGd,OAAO;AACf,ACLK,UDKCC,ACJQgB,IDIJ,GAAG,ECLR,EDKL,CCJ4B,IADvB,CACSA,SADT;ADIU,ACFf,UDIQrB,ACJFsB,GDES,CCFL,EDIgB,CCJbC,GDEE,CAEPvB,ECJW,CDEJ,ACFKwB,MAAP,CAAc,EAAd,EAAkBN,IAAI,CAAC,CAAD,CAAtB,CAAb;ADEe,UAEFZ,QAFE,GAEW,IAFX,CAEFA,QAFE,EAGf;ACHA,UAAIe,SAAJ,EAAe;ADIfrB,ACJe,MDIfA,GAAG,CAACO,ECHMkB,EDGV,ECJe,GACUJ,SADV,CACLI,IADK;ADKfzB,ACLe,MDKfA,GAAG,CAACQ,ECJYkB,IADD,GDKf,ACJyBL,GDIT,MCLD,CACCK,EDIhB,ECLe;ACYjB,AFZiB,ACEbJ,QAAAA,IAAI,CAACG,GCUGa,CDVJ,CAAJ,EDIelC,EEMnB,ADVkBsB,ECUE,CFNI,CAAC,ACJrB,CDIoB,CANP;AEYG,AFZH,ACGbR,QAAAA,EDGMjB,CANO,CCGT,CAAC0B,OAAL,CAAaL,CDGPrB,CANO,ECGb;ADHa,ACIb,UDESC,CANI,ECIR0B,IAAL,GAAYV,EDEHhB,CANI,CCIG,CAAC2B,GAAL,EAAZ;ACSF,AFNAxB,ACFC,MDEDA,CCPA,CCaMkC,EFNF,CAACjC,ECFE,CACL,CCOW,GAAI,CFNjB,CAAcL,CAAd,EEMsBsC,AFNLrC,CAAjB,MEMiB,GAAeqB,MAAM,CAACC,MAAP,CAC9B,EAD8B,EAE9B;AACEpB,AFRJJ,ACDC,MCSGI,AFRJJ,GAAG,CAACS,CEQK,EAAE,IFRX,GARe,CASf;AEQMO,QAAAA,MAAM,EAAE,CADH;AAELC,AFRNjB,ACDA,MDCAA,EEQMiB,CFRH,CAACV,GCDGe,CDCP,EEQc,CDTd,CCSgB;AACRrB,AFRRD,ACDD,MDCCA,GAAG,CEQKC,AFRJO,CEQK,EAAE,CADK,KFPhB,GAAgB,SAAhB;AESQN,AFRRE,MAAAA,IEQQF,CAAC,AFRJ,CAACQ,CEQK,MFRX,CAAc,UAACC,KAAD,EAAQC,KAAR,EAAkB;AEMhB,AFLdA,QAAAA,KAAK,GAAG,CAAR,IAAaP,IAAI,CAACC,QAAL,CAAcK,KAAK,CAACV,CAApB,EAAuBU,KAAK,CAACT,CAA7B,CAAb;AEGS,AFFV,OECC,AFHF,mBCAI;ACWAsC,AFRJxC,ACHI,MCWAwC,AFRJxC,GAAG,CEQK,AFRJS,ACFIS,ECUE,EDXN,GDGJ,ACFuB,IADnB,CACIA,IADJ;ACYEuB,AFRP,ACJK,QCYEA,EDXQb,GCWH,CDZP,CCYS,EDXU,IADnB,CACUA,IADV;ACWM,ADTVV,MAAAA,IAAI,CAACY,IAAL,CAAUF,IAAV;ACCE,ADAH,KCFiC,EAc9BU,MAd8B,CAAhC;6BFKOzB,OAAO;AEWd,AFVA,SEUK6B,CFVCrC,IAAI,EEUV,CFVa,EEUE,EFVf,EEUmBR,gBAAJ,CACb8C,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,UAAlC,CAA6C,IAA7C,CADa,EAEb,EAFa,CAAf;AAIA,AFfc,SEeTzC,CFbGJ,GAFM,CEed,EFbgB,CEaH,GFfC,CEeGe,AFbTf,ECHPqB,CDCa,UCDF,CCgBC,CAAUkB,OAAO,CAACnC,KAAlB,CAAb;AACA,AFbAJ,ACHA,MDGAA,GEaK8C,AFbF,CAACvC,ACHAc,IDGJ,CEaA,GAAc,CAAd,ADhBA,EAAe;ACiBf,AFbArB,ACHE,MDGFA,GEaKa,AFbF,CAACL,ECHE,CAAC,CCgBP,GAAa,CDhBDa,CCgBZ,AFbA,GAAgB,KCHV,CDGN,GCHyBA,SAAS,CAACI,IAAV,KAAmB,KAAKJ,SAAL,CAAeI,IAAzD,EAA+D;ACiBjE,AFbAZ,ACHI,MDGJA,GEaKkC,EFbA,CAACrC,GCHGW,ICgBT,AFbA,CAAc,EEaI,EAAlB,ADhBI,GAAiBA,SDGO,ACHxB;ACkBJ,AFf4B,ACFzB,SCiBE2B,ADnBH,GDIe/C,CAAW,EEe5B,A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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["export default class Painter {\r\n  constructor(context2d, unit = 20) {\r\n    this.ctx = context2d\r\n    this.unit = unit\r\n  }\r\n\r\n  drawRect(x, y) {\r\n    const { ctx, unit } = this\r\n    ctx.fillRect(x * unit, y * unit, unit, unit)\r\n  }\r\n\r\n  drawSnake(snake) {\r\n    const self = this\r\n    const { ctx, drawRect } = this\r\n    // 画蛇头\r\n    ctx.save()\r\n    ctx.fillStyle = '#21bd73'\r\n    const { x, y } = snake[0]\r\n    self.drawRect(x, y)\r\n    ctx.restore()\r\n    // 画蛇身\r\n    ctx.save()\r\n    ctx.fillStyle = '#89ce97'\r\n    snake.forEach((block, index) => {\r\n      index > 0 && self.drawRect(block.x, block.y)\r\n    })\r\n    ctx.restore()\r\n  }\r\n\r\n  drawFood(foods) {\r\n    const self = this\r\n    const { ctx } = this\r\n    ctx.save()\r\n    ctx.fillStyle = 'gold'\r\n    foods.forEach(({ x, y }) => {\r\n      self.drawRect(x, y)\r\n    })\r\n    ctx.restore()\r\n\r\n    return this\r\n  }\r\n\r\n  clear() {\r\n    this.ctx.clearRect(0, 0, 1000, 1000)\r\n    return this\r\n  }\r\n}\r\n","export default class Snake {\r\n  constructor({ length, position }) {\r\n    const { x, y } = position\r\n    this.body = new Array(length).fill({ x, y })\r\n    this.direction = null\r\n  }\r\n\r\n  move() {\r\n    const { body, direction } = this\r\n    const head = Object.assign({}, body[0])\r\n\r\n    if (direction) {\r\n      const { axis, step } = direction\r\n      head[axis] += step\r\n      body.unshift(head)\r\n      this.tail = body.pop()\r\n    } else {\r\n      // 没有设置移动的方向\r\n    }\r\n\r\n    return head\r\n  }\r\n\r\n  eat() {\r\n    const { body, tail } = this\r\n    body.push(tail)\r\n  }\r\n\r\n  go(direction) {\r\n    if (direction) {\r\n      if (!this.direction || direction.axis !== this.direction.axis) {\r\n        this.direction = direction\r\n      } else {\r\n        // 不能180°掉头\r\n      }\r\n    } else {\r\n      this.direction = this.lastDirection\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.lastDirection = Object.assign({}, this.direction)\r\n    this.direction = null\r\n  }\r\n}\r\n","import Painter from './Painter'\r\nimport Snake from './Snake'\r\n\r\n// KEY CODE\r\n// const KEY_ENTER = 13\r\nconst KEY_SPACE = 32\r\nconst KEY_LEFT = 37\r\nconst KEY_TOP = 38\r\nconst KEY_RIGHT = 39\r\nconst KEY_DOWN = 40\r\n\r\nexport default class Game {\r\n  /**\r\n   * Create a game\r\n   * @param {Object} config - The game's configuration\r\n   * @param {Object} config.snake - The snake's configuration\r\n   * @param {number} config.snake.length - The length of snake\r\n   * @param {Object} config.snake.position - The snake's start position\r\n   * @param {number} config.snake.position.x\r\n   * @param {number} config.snake.position.y\r\n   * @param {Object} config.food - The food's configuration\r\n   * @param {number} config.count - 地图上食物的数量\r\n   */\r\n  constructor(config) {\r\n    const _config = (this._config = Object.assign(\r\n      {},\r\n      {\r\n        snake: {\r\n          length: 3,\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        },\r\n        food: {\r\n          count: 1\r\n        }\r\n      },\r\n      config\r\n    ))\r\n    this.painter = new Painter(\r\n      document.getElementById('canvas').getContext('2d'),\r\n      20\r\n    )\r\n    this.snake = new Snake(_config.snake)\r\n    this.status = 1\r\n    this.foods = []\r\n    this.chessboard = []\r\n\r\n    this.tipElm = document.querySelector('.tip')\r\n\r\n    this.initEvent()\r\n      .initChessboard()\r\n      .initSnake()\r\n      .initFood()\r\n      .layout()\r\n      .draw()\r\n  }\r\n\r\n  reset() {\r\n    this.snake = new Snake(this._config.snake)\r\n    this.status = 1\r\n    this.foods = []\r\n    this.chessboard = []\r\n    this.initChessboard()\r\n      .initSnake()\r\n      .initFood()\r\n      .layout()\r\n      .draw()\r\n  }\r\n\r\n  initEvent() {\r\n    const self = this\r\n    document.addEventListener('keydown', evt => {\r\n      const { keyCode } = evt\r\n      const { snake, tipElm, status } = self\r\n      // console.log(keyCode)\r\n      if (keyCode === KEY_SPACE) {\r\n        if (status === 1) {\r\n          if (snake.direction) {\r\n            snake.stop()\r\n            tipElm.innerHTML = '按空格键继续游戏'\r\n          } else {\r\n            snake.go()\r\n            tipElm.innerHTML = '按空格键暂停游戏'\r\n          }\r\n          // snake.direction ? snake.stop() : snake.go()\r\n        } else {\r\n          self.reset()\r\n        }\r\n      } else if (keyCode > 36 && keyCode < 41 && status === 1) {\r\n        tipElm.innerHTML = '按空格键暂停游戏'\r\n\r\n        if (keyCode === KEY_TOP) {\r\n          snake.go({ axis: 'y', step: -1 })\r\n        } else if (keyCode === KEY_DOWN) {\r\n          snake.go({ axis: 'y', step: 1 })\r\n        } else if (keyCode === KEY_LEFT) {\r\n          snake.go({ axis: 'x', step: -1 })\r\n        } else if (keyCode === KEY_RIGHT) {\r\n          snake.go({ axis: 'x', step: 1 })\r\n        }\r\n      } else {\r\n        // TODO\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  initChessboard() {\r\n    const { chessboard } = this\r\n    for (let i = 0; i < 30; i++) {\r\n      chessboard[i] = new Array(30).fill(0)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  initSnake() {\r\n    const { x, y } = this._config.snake.position\r\n    const chessboard = this.chessboard\r\n    chessboard[x] = []\r\n    chessboard[x][y] = 1\r\n\r\n    return this\r\n  }\r\n\r\n  initFood() {\r\n    const len = this._config.food.count\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      const food = this.addFood()\r\n      this.foods.push(food)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  addFood() {\r\n    const chessboard = this.chessboard\r\n    const food = { status: 1 }\r\n    let flag = true\r\n    while (flag) {\r\n      const x = Math.round(Math.random() * 30)\r\n      const y = Math.round(Math.random() * 30)\r\n      if (chessboard[x][y] === 0) {\r\n        food.x = x\r\n        food.y = y\r\n        flag = false\r\n      }\r\n    }\r\n    return food\r\n  }\r\n\r\n  layout() {\r\n    const { chessboard, snake, foods } = this\r\n    for (let i = 0; i < 30; i++) {\r\n      chessboard[i] = new Array(30).fill(0)\r\n    }\r\n\r\n    snake.body.forEach(({ x, y }) => {\r\n      chessboard[x][y] = 1\r\n    })\r\n\r\n    foods.forEach(({ status, x, y }) => {\r\n      status && (chessboard[x][y] = 2)\r\n    })\r\n\r\n    // console.log(chessboard)\r\n\r\n    return this\r\n  }\r\n\r\n  draw() {\r\n    const { painter, snake, foods } = this\r\n    painter\r\n      .clear()\r\n      .drawFood(foods)\r\n      .drawSnake(snake.body)\r\n  }\r\n\r\n  step() {\r\n    const { snake, chessboard, foods, tipElm } = this\r\n    if (snake.direction) {\r\n      const { x, y } = snake.move()\r\n      const { body } = snake\r\n      let isBiteSelf = false\r\n\r\n      for (let i = 4; i < body.length; i++) {\r\n        if (x === body[i].x && y === body[i].y) {\r\n          isBiteSelf = true\r\n          break\r\n        }\r\n      }\r\n\r\n      let message = ''\r\n\r\n      if (x < 0 || y < 0 || x === 30 || y === 30) {\r\n        // 超出边界\r\n        message = '撞墙啦'\r\n      } else if (isBiteSelf) {\r\n        // 撞自己的身体\r\n        message = '咬到自己啦'\r\n      } else if (chessboard[x][y] === 2) {\r\n        // console.log('吃到食物了')\r\n        for (let i = 0; i < foods.length; i++) {\r\n          const food = foods[i]\r\n          if (food.x === x && food.y === y) {\r\n            foods.splice(i, 1)\r\n            snake.eat()\r\n            foods.push(this.addFood())\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      if (message) {\r\n        snake.stop()\r\n        alert(message)\r\n        tipElm.innerHTML = '按空格键重新开始游戏'\r\n        this.status = 0 // 游戏结束\r\n      } else {\r\n        this.layout().draw()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Game from './src/components/Game'\r\n\r\nlet lastTimestamp\r\nlet level = 5\r\nlet speed = 500 / level\r\n\r\nfunction step(timestamp) {\r\n  if (!lastTimestamp || timestamp - lastTimestamp > speed) {\r\n    lastTimestamp = timestamp\r\n    game.step()\r\n  }\r\n\r\n  window.requestAnimationFrame(step)\r\n}\r\n\r\nconst game = new Game({\r\n  snake: {\r\n    length: 5,\r\n    position: {\r\n      x: 15,\r\n      y: 15\r\n    }\r\n  }\r\n})\r\n\r\nwindow.requestAnimationFrame(step)\r\n"]}